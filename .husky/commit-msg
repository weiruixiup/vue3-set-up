#!/bin/sh

# Get the commit message
commit_msg=$(cat "$1")

# Define the commit message regex for valid types and format
msg_re="^(feat|fix|docs|style|refactor|perf|test|workflow|build|ci|chore|release|workflow)(\(.+\))?: .{1,100}"

# Print the current commit message
echo "Current commit message: \"$commit_msg\""

# Check the length of the commit message
if [ ${#commit_msg} -gt 50 ]; then
    echo "Error: Commit message exceeds 50 characters."
    exit 1
fi

# Check if the commit message matches the required format
if [[ ! $commit_msg =~ $msg_re ]]; then
    echo "Invalid commit message format. Please use the correct format:"
    echo ""
    echo "feat:        A new feature"
    echo "fix:         A bug fix"
    echo "docs:        Documentation changes"
    echo "style:       Code style changes (white-space, formatting, etc.)"
    echo "refactor:    Code refactoring (neither new feature nor bug fix)"
    echo "perf:        Performance improvements"
    echo "test:        Adding or updating tests"
    echo "chore:       Changes to build process or auxiliary tools"
    echo "workflow:    Changes in the CI/CD pipeline or workflow"
    echo ""
    echo "For more details, see the commit message guidelines:"
    echo "https://www.conventionalcommits.org/en/v1.0.0/"
    # Exit with an error code
    exit 1
fi

# If everything is fine
echo "Commit message is valid."
